{
	"coc.preferences.semanticTokensHighlights": false,
	"coc.preferences.enableMessageDialog": true,
	"coc.preferences.enableFloatHighlight": true,
	"coc.preferences.snippetStatusText": "Ⓢ ",
	"coc.preferences.extensionUpdateCheck": "daily",
	"coc.preferences.messageLevel": "error",
	"coc.source.around.firstMatch": false,
	"coc.source.buffer.firstMatch": false,
	"coc.source.syntax.firstMatch": false,

	"suggest.detailMaxLength": 60,
	"suggest.noselect": true,
	"suggest.enablePreselect": false,
	"suggest.triggerAfterInsertEnter": true,
	"suggest.autoTrigger": "always",
	"suggest.timeout": 5000,
	"suggest.enablePreview": true,
	"suggest.floatEnable": true,
	"diagnostic.floatConfig": {
		"border": true,
		"rounded": true,
		"highlight": "Normal",
		"focusable": false
	},
	"hover.floatConfig": {
		"border": true,
		"rounded": true,
		"highlight": "Normal",
		"focusable": false
	},
	"suggest.floatConfig": {
		"border": true,
		"rounded": true,
		"highlight": "Normal"
	},
	"suggest.detailField": "preview",
	"suggest.snippetIndicator": "",
	"suggest.triggerCompletionWait": 100,
	"suggest.echodocSupport": true,
	"suggest.completionItemKindLabels": {
		"text": " text",
		"method": "m method",
		"function": " function",
		"constructor": " constructor",
		"field": " field",
		"variable": " variable",
		"class": " class",
		"interface": " interface",
		"module": " module",
		"property": " property",
		"unit": " unit",
		"value": " value",
		"enum": " enum",
		"keyword": " keyword",
		"snippet": " snippet",
		"color": " color",
		"file": " file",
		"reference": " reference",
		"folder": " folder",
		"constant": " constant",
		"struct": "  struct",
		"event": " event",
		"operator": " operator"
	},
	"diagnostic.errorSign": "\uf467",
	"diagnostic.warningSign": "\uf071",
	"diagnostic.infoSign": "\uf129",
	"diagnostic.hintSign": "\uf864",
	"diagnostic.displayByAle": false,
	"diagnostic.refreshOnInsertMode": true,
	"diagnostic.checkCurrentLine": true,
	"diagnostic.virtualTextPrefix": " ❯❯❯ ",
	"diagnostic.virtualTextCurrentLineOnly": false,
	"diagnostic.virtualText": true,
	"codeLens.enable": true,
	"list.previewHighlightGroup": "Statement",
	"list.nextKeymap": "<C-e>",
	"list.previousKeymap": "<C-u>",
	"importCost.bundleSizeDecoration": "both",
	"importCost.typescriptExtensions": ["\\.tsx?$"],
	"importCost.javascriptExtensions": ["\\.jsx?$"],
	"importCost.showCalculatingDecoration": true,
	"importCost.debug": false,
	"snippets.ultisnips.directories": [
		"$HOME/.config/nvim/Ultisnips/",
		"$HOME/.config/nvim/plugged/vim-snippets/UltiSnips/"
	],
	"coc.preferences.formatOnSaveFiletypes": [
		"javascript",
		"typescript",
		"typescriptreact",
		"html",
		"css",
		"json",
		"jsonc",
		"java",
		"python",
		"vue",
		"svelte",
		"c",
		"cpp",
		"cs",
		"racket",
		"prisma",
		"dart",
		"terraform"
	],
	"yaml.format.enable": true,
	"signature.target": "float",
	"yank.enableCompletion": false,
	"typescript.suggestionActions.enabled": true,
	"jest.watch": false,
	"flutter.outlineWidth": 40,
	"flutter.outlineIconPadding": 0,
	"flutter.UIPath": true,
	"flutter.openDevLogSplitCommand": "botright 12split",
	"flutter.lsp.initialization.onlyAnalyzeProjectsWithOpenFiles": false,
	"flutter.trace.server": "off",
	"dart.lineLength": 100,
	"tslint.autoFixOnSave": false,
	"python.formatting.provider": "yapf",
	"python.formatting.yapfArgs": [
		"--style",
		"{SPACES_AROUND_POWER_OPERATOR: True, SPACES_BEFORE_COMMENT: 1}"
	],
	"html.format.enable": true,
	"javascript.referencesCodeLens.enable": true,
	"javascript.showUnused": true,
	"javascript.suggest.names": true,
	"javascript.suggestionActions.enabled": true,
	"json.format.enable": true,
	"eslint.autoFixOnSave": false,
	"prettier.printWidth": 100,
	"prettier.disableLanguages": [],
	"prettier.formatterPriority": 1,
	"prettier.useTabs": true,
	"prettier.trailingComma": "all",
	"prettier.singleQuote": false,
	"todolist.autoUpload": true,
	"todolist.promptForReminder": false,
	"coc-actions.hideCursor": false,
	"coc-actions.showActionKind": true,
	"diagnostic-languageserver.formatFiletypes": {
		"elixir": "mix_format",
		"eelixir": "mix_format"
	}
}
